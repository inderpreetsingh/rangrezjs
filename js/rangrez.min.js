var RGB=function(){var t=this;t.r=0,t.g=0,t.b=0,t.normalize=function(e,i,s){return t.r=e/255,t.g=i/255,t.b=s/255,t},t.denormalize=function(e,i,s){t.r=Math.round(255*e),t.g=Math.round(255*i),t.b=Math.round(255*s)},t.giveString=function(){return rgbString="rgb("+t.r+","+t.g+","+t.b+")"},t.getString=function(e){console.log("the string got before regexp"+e),e=e.replace(/[^\d,]/g,"").split(","),console.log("the string got after regexp"+e),t.r=parseInt(e[0]),t.g=parseInt(e[1]),t.b=parseInt(e[2])}},rangrez=function(t){var e=this;e.trainer=t.trainer||"json/complimentory.json",e.roohClass=t.roohClass||".rooh",e.rangrezClass=t.rangrezClass||".rangrez",e.rangrezCSS=t.rangrezCSS||"color",e.roohCSS=t.roohCSS||"background-color";var i=new RGB,s=new RGB,n=new brain.NeuralNetwork;e.moheRangDe=function(){roohColor=$(e.roohClass).css(e.roohCSS),console.log("rooh color is "+roohColor),i.getString(roohColor),console.log("rooh RGB is "+i),i.normalize(i.r,i.g,i.b),console.log("normalized rooh RGB is "+i.r);var t=n.run(i);console.log("output of neural network is "+t.r),s.denormalize(t.r,t.g,t.b),console.log("denormalized output into rangrezRGB is "+s.r+s.g+s.b),$(e.rangrezClass).css(e.rangrezCSS,s.giveString())},$.getJSON(e.trainer,function(t){n.train(t.data),console.log("network trained"),e.moheRangDe()})};